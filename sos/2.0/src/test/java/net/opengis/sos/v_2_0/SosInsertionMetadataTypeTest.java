package net.opengis.sos.v_2_0;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.fail;

import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.StringReader;

import javax.xml.bind.JAXBContext;
import javax.xml.bind.JAXBElement;
import javax.xml.bind.JAXBException;
import javax.xml.bind.Unmarshaller;
import javax.xml.bind.ValidationEvent;
import javax.xml.bind.ValidationEventHandler;

import org.junit.Test;
import org.junit.Ignore;

import net.opengis.sos.v_2_0.SosInsertionMetadataType;
import net.opengis.swes.v_2_0.InsertSensorType;
import net.opengis.swes.v_2_0.InsertSensorType.Metadata;

/**
 * Unit test demonstrating inability to unmarshal SosInsertionMetadata on an
 * swes:InsertSensor request
 */
public class SosInsertionMetadataTypeTest {
	// this is a valid insertSensor document, but JAXB doesn't know how to marshal
	// the sos2:SosInsertionMetadata element
	public static final String wierdButUnmarshalledInsertSensorWithMetadata = ""
			+ "<?xml version=\"1.0\" encoding=\"UTF-8\"?>" + "<swes:InsertSensor " + "version=\"2.0.0\" "
			+ "service=\"SOS\" " + "xmlns:swes=\"http://www.opengis.net/swes/2.0\" "
			+ "xmlns:sos2=\"http://www.opengis.net/sos/2.0\" "
			+ "xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">" + "	<swes:procedureDescriptionFormat/>"
			+ "	<swes:procedureDescription>" + "		<auto-generated_for_wildcard/>"
			+ "	</swes:procedureDescription>" + "	<swes:observableProperty/>" + "	<swes:metadata>"
			+ "		<swes:InsertionMetadata xsi:type='sos2:SosInsertionMetadataType'>"
			+ "			<sos2:observationType>Obs_type</sos2:observationType>"
			+ "			<sos2:featureOfInterestType>FOI_type</sos2:featureOfInterestType>"
			+ "		</swes:InsertionMetadata>" + "	</swes:metadata>" + "</swes:InsertSensor>";

	@Test
	public void testSosMetadata() throws JAXBException, IOException {
		JAXBContext context = JAXBContext.newInstance("net.opengis.swes.v_2_0:net.opengis.sos.v_2_0");

		Unmarshaller unmarshaller = context.createUnmarshaller();

		// without this validation handler JAXB fails silently
		unmarshaller.setEventHandler(new ValidationEventHandler() {
			public boolean handleEvent(ValidationEvent event) {
				throw new RuntimeException(event.getMessage(), event.getLinkedException());
			}
		});

		try (InputStream is = getClass().getClassLoader().getResourceAsStream("InsertSensor01.xml")) {

			JAXBElement<InsertSensorType> insertSensorElement = (JAXBElement<InsertSensorType>) unmarshaller
					.unmarshal(is);

			InsertSensorType insertSensor = insertSensorElement.getValue();
			assertEquals("Incorrect amount of metadata", 1, insertSensor.getMetadata().size());

			Metadata metadata = insertSensor.getMetadata().get(0);
			assertNotNull("metadata is null");

			if (!metadata.isSetInsertionMetadata()) {
				fail("metadata is not set");
			}

			SosInsertionMetadataType simt = (SosInsertionMetadataType) metadata.getInsertionMetadata();
			assertNotNull("Missing SOS Insertion Metadata", simt);

			assertEquals(1, simt.getFeatureOfInterestType().size());
			assertEquals("FOI_type", simt.getFeatureOfInterestType().get(0));

			assertEquals(1, simt.getObservationType().size());
			assertEquals("Obs_type", simt.getObservationType().get(0));
		}
	}

	@Test
	public void testWierdSosMetadata() throws JAXBException, FileNotFoundException {
		JAXBContext context = JAXBContext.newInstance("net.opengis.sos.v_2_0:"
				+ "net.opengis.swes.v_2_0");

		Unmarshaller unmarshaller = context.createUnmarshaller();

		// without this validation handler JAXB fails silently
		unmarshaller.setEventHandler(new ValidationEventHandler() {
			public boolean handleEvent(ValidationEvent event) {
				throw new RuntimeException(event.getMessage(), event.getLinkedException());
			}
		});

		StringReader in = new StringReader(wierdButUnmarshalledInsertSensorWithMetadata);
		JAXBElement<InsertSensorType> insertSensorElement = (JAXBElement<InsertSensorType>) unmarshaller.unmarshal(in);

		InsertSensorType insertSensor = insertSensorElement.getValue();
		assertEquals("Incorrect amount of metadata", 1, insertSensor.getMetadata().size());

		Metadata metadata = insertSensor.getMetadata().get(0);
		assertNotNull("metadata is null");

		if (!metadata.isSetInsertionMetadata()) {
			fail("metadata is not set");
		}

		SosInsertionMetadataType simt = (SosInsertionMetadataType) metadata.getInsertionMetadata();
		assertNotNull("Missing SOS INnsertion Metadata", simt);

		assertEquals(1, simt.getFeatureOfInterestType().size());
		assertEquals("FOI_type", simt.getFeatureOfInterestType().get(0));

		assertEquals(1, simt.getObservationType().size());
		assertEquals("Obs_type", simt.getObservationType().get(0));
	}
}
